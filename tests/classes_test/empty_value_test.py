'''This module contains Empty Value tests to be run with pytest.

The file was generated by methods of the `Tests` class in the `genedata.generate` module.

DO NOT MODIFY THIS FILE.
'''

import pytest   # noqa: I001
import re

import genedata.classes70 as gc
from genedata.build import Genealogy


g = Genealogy()
fam = g.family_xref('1')
indi = g.individual_xref('1')
obje = g.multimedia_xref('1')
repo = g.repository_xref('1')
snote = g.shared_note_xref('1', 'a note')
sour = g.source_xref('1')
subm = g.submitter_xref('1')


def test_empty_value_Bapl() -> None:
    '''Validate the `Bapl` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Bapl.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Bapl(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_Chan() -> None:
    '''Validate the `Chan` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Chan.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Chan(value='hi', subs=gc.DateExact('1 JAN 2000'))  # type: ignore[call-arg]


def test_empty_value_Conl() -> None:
    '''Validate the `Conl` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Conl.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Conl(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_Crea() -> None:
    '''Validate the `Crea` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Crea.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Crea(value='hi', subs=gc.DateExact('1 JAN 2000'))  # type: ignore[call-arg]


def test_empty_value_Crop() -> None:
    '''Validate the `Crop` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Crop.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Crop(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_Data() -> None:
    '''Validate the `Data` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Data.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Data(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_Endl() -> None:
    '''Validate the `Endl` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Endl.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Endl(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_Gedc() -> None:
    '''Validate the `Gedc` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Gedc.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Gedc(value='hi', subs=gc.GedcVers('abc'))  # type: ignore[call-arg]


def test_empty_value_HeadPlac() -> None:
    '''Validate the `HeadPlac` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("HeadPlac.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.HeadPlac(value='hi', subs=gc.HeadPlacForm('text'))  # type: ignore[call-arg]


def test_empty_value_Head() -> None:
    '''Validate the `Head` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Head.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Head(value='hi', subs=gc.Gedc(gc.GedcVers('abc')))  # type: ignore[call-arg]


def test_empty_value_Husb() -> None:
    '''Validate the `Husb` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Husb.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Husb(value='hi', subs=gc.Age('> 10y 2m 1d'))  # type: ignore[call-arg]


def test_empty_value_Inil() -> None:
    '''Validate the `Inil` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Inil.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Inil(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_Map() -> None:
    '''Validate the `Map` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Map.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Map(value='hi', subs=[gc.Lati('N10.1'), gc.Long('E10.1')])  # type: ignore[call-arg]


def test_empty_value_Schma() -> None:
    '''Validate the `Schma` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Schma.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Schma(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_Slgc() -> None:
    '''Validate the `Slgc` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Slgc.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Slgc(value='hi', subs=gc.Famc(fam))  # type: ignore[call-arg]


def test_empty_value_Slgs() -> None:
    '''Validate the `Slgs` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Slgs.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Slgs(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_SourData() -> None:
    '''Validate the `SourData` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("SourData.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.SourData(value='hi', subs=None)  # type: ignore[call-arg]


def test_empty_value_Wife() -> None:
    '''Validate the `Wife` without substructures cannot receive a substructure.'''
    with pytest.raises(
        TypeError, match=re.escape("Wife.__init__() got an unexpected keyword argument 'value'")
    ):
        gc.Wife(value='hi', subs=gc.Age('> 10y 2m 1d'))  # type: ignore[call-arg]
